% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale2num.R
\name{scale2num}
\alias{scale2num}
\title{To z-score or mean-center, but only output as numeric}
\usage{
scale2num(x, center = T, scale = T, ...)
}
\arguments{
\item{x}{A numeric matrix or vector to be scaled and converted; can be a data frame column}

\item{center}{Logical. Indicates whether the values should be centered by subtracting their mean. Defaults to \code{TRUE}.}

\item{scale}{Logical. Indicates whether the values should be scaled by dividing by their standard deviation. Defaults to \code{TRUE}.}

\item{...}{Additional arguments passed to \code{scale()}.}
}
\value{
A numeric vector containing the scaled and centered values.
}
\description{
This function scales and/or centers a numeric matrix or vector using the \code{scale()} function and then converts the result to a numeric vector.
It includes additional error handling for common mistakes, such as using British spelling for the \code{center} argument.
}
\details{
This function performs scaling and centering on the input data and returns it as a numeric vector. Note the following downsides:
\itemize{
\item \strong{Loss of original scaling attributes}: \code{as.numeric()} removes metadata about the scaling, such as the mean and standard deviation.
\item \strong{Breaks reproducibility}: Without the original scaling parameters, it is not possible to reverse the scaling.
\item \strong{Potential precision loss}: Converting from a matrix to numeric might introduce minor floating-point precision changes.
}
}
\examples{
# Example usage:
data <- data.frame(a=c(1,2,3))
data$a_z <- scale2num(data$a)
data$a_c <- scale2num(data$a, scale = FALSE) #to mean-center

}
\seealso{
\code{\link[base]{scale}}, \code{\link[base]{as.numeric}}
}
